@echo off
REM ==============================================
REM TENNIS SCOREBOARD DEPLOYMENT BATCH SCRIPT
REM ==============================================
REM Batch —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è –≤ Windows CMD

setlocal enabledelayedexpansion
set COMPOSE_FILE=compose.yml
set ENV_FILE=.env
set APP_NAME=tennis-scoreboard

if "%1"=="" goto help
if "%1"=="help" goto help
if "%1"=="build" goto build
if "%1"=="up" goto up
if "%1"=="down" goto down
if "%1"=="restart" goto restart
if "%1"=="deploy" goto deploy
if "%1"=="status" goto status
if "%1"=="logs" goto logs
if "%1"=="health" goto health
if "%1"=="backup" goto backup
if "%1"=="clean" goto clean
goto help

:help
echo.
echo === TENNIS SCOREBOARD DEPLOYMENT ===
echo.
echo –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
echo   deploy.bat build     - –°–æ–±—Ä–∞—Ç—å –≤—Å–µ Docker –æ–±—Ä–∞–∑—ã
echo   deploy.bat up        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
echo   deploy.bat down      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
echo   deploy.bat restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
echo   deploy.bat deploy    - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (build + up)
echo   deploy.bat status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo   deploy.bat logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo   deploy.bat health    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
echo   deploy.bat backup    - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î
echo   deploy.bat clean     - –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã
echo.
goto end

:build
echo üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...
docker-compose -f %COMPOSE_FILE% --env-file %ENV_FILE% build --no-cache
if %errorlevel%==0 (
    echo ‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
) else (
    echo ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏
)
goto end

:up
echo üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...
docker-compose -f %COMPOSE_FILE% --env-file %ENV_FILE% up -d
timeout /t 5 /nobreak >nul
call :status
echo ‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã
echo üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost
goto end

:down
echo üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...
docker-compose -f %COMPOSE_FILE% --env-file %ENV_FILE% down
echo ‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
goto end

:restart
echo üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...
call :down
timeout /t 2 /nobreak >nul
call :up
goto end

:deploy
echo üöÄ –ü–û–õ–ù–´–ô –î–ï–ü–õ–û–ô –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
call :build
call :up
call :health
echo ‚úÖ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û
goto end

:status
echo üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:
docker-compose -f %COMPOSE_FILE% ps
goto end

:logs
echo üìú –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:
docker-compose -f %COMPOSE_FILE% logs --tail=50
goto end

:health
echo üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤...
echo –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx (–ø–æ—Ä—Ç 80):
curl -s -f http://localhost >nul 2>&1
if %errorlevel%==0 (
    echo ‚úÖ Nginx: OK
) else (
    echo ‚ùå Nginx: FAIL
)

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Ä—Ç 8080):
curl -s -f http://localhost:8080 >nul 2>&1
if %errorlevel%==0 (
    echo ‚úÖ App: OK
) else (
    echo ‚ùå App: FAIL
)

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:
docker-compose -f %COMPOSE_FILE% exec -T db pg_isready -U postgres >nul 2>&1
if %errorlevel%==0 (
    echo ‚úÖ Database: OK
) else (
    echo ‚ùå Database: FAIL
)
goto end

:backup
echo üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ë–î...
if not exist backups mkdir backups
for /f "tokens=1-3 delims=/ " %%a in ('date /t') do set mydate=%%c%%b%%a
for /f "tokens=1-2 delims=: " %%a in ('time /t') do set mytime=%%a%%b
set timestamp=%mydate%_%mytime%
docker-compose -f %COMPOSE_FILE% exec -T db pg_dump -U postgres postgres > backups\tennis_db_backup_%timestamp%.sql
if %errorlevel%==0 (
    echo ‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: backups\tennis_db_backup_%timestamp%.sql
) else (
    echo ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
)
goto end

:clean
echo üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤...
docker system prune -f
docker image prune -f
echo ‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
goto end

:end
endlocal
